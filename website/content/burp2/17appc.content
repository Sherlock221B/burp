<h3 align="center">Improved Open Source Backup:
<br>Incorporating inline deduplication and sparse indexing solutions</h3>
<h4 align="center">G. P. E. Keeling</h4>

<a href="16appb.html">&lt; Prev</a>
<a href="00contents.html">Contents</a>
<a href="18appd.html">Next &gt;</a>



<h4>Appendix C - Rabin fingerprinting algorithm in C</h4>

<p>
This is a reproduction of the C function containing the
rabin algorithm that was produced for the proof of concept programs.
I judge this as being the most important outcome from that exercise, although
it was modified slightly during later iterations in order to support slightly
different usage required in the final software where asyncronous i/o had to be
taken into account.
<i>Note that the full code of the prototype can be found in the extra materials
submitted with this report.</i>
</p>

<pre>
static int blk_read(struct rconf *rconf, FILE *ofp, uint64_t multiplier,
        char *buf, char *buf_end, struct win *win,
        struct blk **blkbuf, int *b)
{
        char c;
        char *cp;
        struct blk *blk;

        for(cp=buf; cp!=buf_end; cp++)
        {
                blk=blkbuf[*b];
                c=*cp;

                blk-&gt;fingerprint = (blk-&gt;fingerprint * rconf-&gt;prime) + c;
                win-&gt;checksum    = (win-&gt;checksum    * rconf-&gt;prime) + c
                                   - (win-&gt;data[win-&gt;pos] * multiplier);
                win-&gt;data[win-&gt;pos] = c;
                win-&gt;pos++;
                win-&gt;total_bytes++;
                blk-&gt;data[blk-&gt;length++] = c;

                if(win-&gt;pos == rconf-&gt;win) win-&gt;pos=0;

                if( blk-&gt;length &gt;= rconf-&gt;blk_min
                 && (blk-&gt;length == rconf-&gt;blk_max
                  || (win-&gt;checksum % rconf-&gt;blk_avg) == rconf-&gt;prime))
                {
                        (*b)++;
                        if(*b&lt;SIG_MAX) continue;
                        if(blks_output(rconf, ofp, blkbuf, b)) return -1;
                }
        }
        return 0;
}
</pre>
<a href="16appb.html">&lt; Prev</a>
<a href="00contents.html">Contents</a>
<a href="18appd.html">Next &gt;</a>
